#define typedef_name
class_name
#define template_name 
identifier
literal
integer_literal
#define character_literal
floating_literal string_literal boolean_literal
#define translation_unit primary_expression id_expression unqualified_id
#define qualified_id nested_name_specifier postfix_expression expression_list
#define unary_expression unary_operator new_expression new_placement new_type_id
#define new_declarator direct_new_declarator new_initializer delete_expression
#define cast_expression pm_expression multiplicative_expression additive_expression
#define shift_expression relational_expression equality_expression and_expression
#define exclusive_or_expression inclusive_or_expression logical_and_expression 
#define logical_or_expression conditional_expression assignment_expression
#define assignment_operator expression constant_expression statement
#define labeled_statement expression_statement compound_statement statement_seq
#define selection_statement condition iteration_statement for_init_statement 
#define jump_statement declaration_statement declaration_seq declaration
#define block_declaration simple_declaration decl_specifier decl_specifier_seq
#define storage_class_specifier function_specifier type_specifier simple_type_specifier
#define type_name elaborated_type_specifier enum_name enum_specifier enumerator_list
#define enumerator_definition enumerator 
#define namespace_definition named_namespace_definition original_namespace_definition
#define unnamed_namespace_definition namespace_body namespace_alias namespace_alias_definition
#define qualified_namespace_specifier using_declaration using_directive asm_definition
#define linkage_specification init_declarator_list init_declarator declarator 
#define direct_declarator ptr_operator cv_qualifier_seq cv_qualifier declarator_id
#define type_id type_specifier_seq abstract_declarator direct_abstract_declarator 
#define parameter_declaration_clause parameter_declaration_list parameter_declaration
#define function_definition function_body initializer initializer_clause initializer_list
#define class_specifier class_head class_key member_specification member_declaration
#define member_declarator_list member_declarator pure_specifier constant_initializer
#define base_clause base_specifier_list base_specifier access_specifier
#define conversion_function_id conversion_type_id conversion_declarator ctor_initializer
#define mem_initializer_list mem_initializer mem_initializer_id operator_function_id
#define operator template_declaration template_parameter_list template_parameter
#define type_parameter template_id template_argument_list template_argument
#define explicit_instantiation explicit_specialization try_block function_try_block
#define handler_seq handler exception_declaration throw_expression exception_specification
#define type_id_list declaration_seq_opt expression_list_opt
#define COLONCOLON_opt new_placement_opt new_initializer_opt new_declarator_opt
#define expression_opt statement_seq_opt condition_opt enumerator_list_opt
#define initializer_opt constant_expression_opt abstract_declarator_opt type_specifier_seq_opt
#define direct_abstract_declarator_opt ctor_initializer_opt COMMA_opt member_specification_opt
#define SEMICOLON_opt conversion_declarator_opt EXPORT_opt handler_seq_opt 
#define assignment_expression_opt type_id_list_opt
#define namespace_name original_namespace_name